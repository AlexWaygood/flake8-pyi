import os

def f1(x: int = ...) -> None: ...
def f2(x: int = 3) -> None: ...
def f201(x: int = -3) -> None: ...
def f202(x: float = 3.14) -> None: ...
def f203(x: type = int) -> None: ...  # Y011 Only simple default values allowed for typed arguments
def f3(*, x: int = ...) -> None: ...
def f4(*, x: complex = 3j) -> None: ...
def f401(*, x: complex = 5 + 3j) -> None: ...
def f402(*, x: complex = -42 - 42j) -> None: ...
def f405(*, x: int = 3 * 3) -> None: ...  # Y011 Only simple default values allowed for typed arguments
def f406(*, x: int = -3 >> 3) -> None: ...  # Y011 Only simple default values allowed for typed arguments
def f5(x=3) -> None: ...
def f6(*, x: int) -> None: ...
def f7(x, y: int = 3) -> None: ...
def f8(x, y: int = ...) -> None: ...
def f9(x, y: str = "x") -> None: ...
def f901(x, y: str = os.pathsep) -> None: ...  # Y011 Only simple default values allowed for typed arguments
def f10(x, y: str = ..., *args: "int") -> None: ...  # Y020 Quoted annotations should never be used in stubs
def f11(*, x: str = "x") -> None: ...
def f12(*, x: str = ..., **kwargs: "int") -> None: ...  # Y020 Quoted annotations should never be used in stubs
def f13(x: list[str] = ["foo", "bar", "baz"]) -> None: ...  # Y011 Only simple default values allowed for typed arguments
def f14(x: tuple[str, ...] = ("foo", "bar", "baz")) -> None: ...  # Y011 Only simple default values allowed for typed arguments
def f15(x: set[str] = {"foo", "bar", "baz"}) -> None: ...  # Y011 Only simple default values allowed for typed arguments
def f16(x: frozenset[bytes] = frozenset({b"foo", b"bar", b"baz"})) -> None: ...  # Y011 Only simple default values allowed for typed arguments
def f17(x: str = "foo" + "bar") -> None: ...  # Y011 Only simple default values allowed for typed arguments
def f18(x: str = b"foo" + b"bar") -> None: ...  # Y011 Only simple default values allowed for typed arguments
def f19(x: object = "foo" + 4) -> None: ...  # Y011 Only simple default values allowed for typed arguments
def f20(x: int = 5 + 5) -> None: ...  # Y011 Only simple default values allowed for typed arguments
def f21(x: complex = 3j - 3j) -> None: ...  # Y011 Only simple default values allowed for typed arguments
